{"ast":null,"code":"/*\n * Mailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.1\n */\nvar Mailcheck = {\n  domainThreshold: 2,\n  secondLevelThreshold: 2,\n  topLevelThreshold: 2,\n  defaultDomains: ['msn.com', 'bellsouth.net', 'telus.net', 'comcast.net', 'optusnet.com.au', 'earthlink.net', 'qq.com', 'sky.com', 'icloud.com', 'mac.com', 'sympatico.ca', 'googlemail.com', 'att.net', 'xtra.co.nz', 'web.de', 'cox.net', 'gmail.com', 'ymail.com', 'aim.com', 'rogers.com', 'verizon.net', 'rocketmail.com', 'google.com', 'optonline.net', 'sbcglobal.net', 'aol.com', 'me.com', 'btinternet.com', 'charter.net', 'shaw.ca'],\n  defaultSecondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n  defaultTopLevelDomains: [\"com\", \"com.au\", \"com.tw\", \"ca\", \"co.nz\", \"co.uk\", \"de\", \"fr\", \"it\", \"ru\", \"net\", \"org\", \"edu\", \"gov\", \"jp\", \"nl\", \"kr\", \"se\", \"eu\", \"ie\", \"co.il\", \"us\", \"at\", \"be\", \"dk\", \"hk\", \"es\", \"gr\", \"ch\", \"no\", \"cz\", \"in\", \"net\", \"net.au\", \"info\", \"biz\", \"mil\", \"co.jp\", \"sg\", \"hu\"],\n  run: function (opts) {\n    opts.domains = opts.domains || Mailcheck.defaultDomains;\n    opts.secondLevelDomains = opts.secondLevelDomains || Mailcheck.defaultSecondLevelDomains;\n    opts.topLevelDomains = opts.topLevelDomains || Mailcheck.defaultTopLevelDomains;\n    opts.distanceFunction = opts.distanceFunction || Mailcheck.sift3Distance;\n\n    var defaultCallback = function (result) {\n      return result;\n    };\n\n    var suggestedCallback = opts.suggested || defaultCallback;\n    var emptyCallback = opts.empty || defaultCallback;\n    var result = Mailcheck.suggest(Mailcheck.encodeEmail(opts.email), opts.domains, opts.secondLevelDomains, opts.topLevelDomains, opts.distanceFunction);\n    return result ? suggestedCallback(result) : emptyCallback();\n  },\n  suggest: function (email, domains, secondLevelDomains, topLevelDomains, distanceFunction) {\n    email = email.toLowerCase();\n    var emailParts = this.splitEmail(email);\n\n    if (secondLevelDomains && topLevelDomains) {\n      // If the email is a valid 2nd-level + top-level, do not suggest anything.\n      if (secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 && topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1) {\n        return false;\n      }\n    }\n\n    var closestDomain = this.findClosestDomain(emailParts.domain, domains, distanceFunction, this.domainThreshold);\n\n    if (closestDomain) {\n      if (closestDomain == emailParts.domain) {\n        // The email address exactly matches one of the supplied domains; do not return a suggestion.\n        return false;\n      } else {\n        // The email address closely matches one of the supplied domains; return a suggestion\n        return {\n          address: emailParts.address,\n          domain: closestDomain,\n          full: emailParts.address + \"@\" + closestDomain\n        };\n      }\n    } // The email address does not closely match one of the supplied domains\n\n\n    var closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, secondLevelDomains, distanceFunction, this.secondLevelThreshold);\n    var closestTopLevelDomain = this.findClosestDomain(emailParts.topLevelDomain, topLevelDomains, distanceFunction, this.topLevelThreshold);\n\n    if (emailParts.domain) {\n      var closestDomain = emailParts.domain;\n      var rtrn = false;\n\n      if (closestSecondLevelDomain && closestSecondLevelDomain != emailParts.secondLevelDomain) {\n        // The email address may have a mispelled second-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n        rtrn = true;\n      }\n\n      if (closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain) {\n        // The email address may have a mispelled top-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.topLevelDomain, closestTopLevelDomain);\n        rtrn = true;\n      }\n\n      if (rtrn == true) {\n        return {\n          address: emailParts.address,\n          domain: closestDomain,\n          full: emailParts.address + \"@\" + closestDomain\n        };\n      }\n    }\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n\n\n    return false;\n  },\n  findClosestDomain: function (domain, domains, distanceFunction, threshold) {\n    threshold = threshold || this.topLevelThreshold;\n    var dist;\n    var minDist = 99;\n    var closestDomain = null;\n\n    if (!domain || !domains) {\n      return false;\n    }\n\n    if (!distanceFunction) {\n      distanceFunction = this.sift3Distance;\n    }\n\n    for (var i = 0; i < domains.length; i++) {\n      if (domain === domains[i]) {\n        return domain;\n      }\n\n      dist = distanceFunction(domain, domains[i]);\n\n      if (dist < minDist) {\n        minDist = dist;\n        closestDomain = domains[i];\n      }\n    }\n\n    if (minDist <= threshold && closestDomain !== null) {\n      return closestDomain;\n    } else {\n      return false;\n    }\n  },\n  sift3Distance: function (s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n      if (s2 == null || s2.length === 0) {\n        return 0;\n      } else {\n        return s2.length;\n      }\n    }\n\n    if (s2 == null || s2.length === 0) {\n      return s1.length;\n    }\n\n    var c = 0;\n    var offset1 = 0;\n    var offset2 = 0;\n    var lcs = 0;\n    var maxOffset = 5;\n\n    while (c + offset1 < s1.length && c + offset2 < s2.length) {\n      if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n        lcs++;\n      } else {\n        offset1 = 0;\n        offset2 = 0;\n\n        for (var i = 0; i < maxOffset; i++) {\n          if (c + i < s1.length && s1.charAt(c + i) == s2.charAt(c)) {\n            offset1 = i;\n            break;\n          }\n\n          if (c + i < s2.length && s1.charAt(c) == s2.charAt(c + i)) {\n            offset2 = i;\n            break;\n          }\n        }\n      }\n\n      c++;\n    }\n\n    return (s1.length + s2.length) / 2 - lcs;\n  },\n  splitEmail: function (email) {\n    var parts = email.trim().split('@');\n\n    if (parts.length < 2) {\n      return false;\n    }\n\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i] === '') {\n        return false;\n      }\n    }\n\n    var domain = parts.pop();\n    var domainParts = domain.split('.');\n    var sld = '';\n    var tld = '';\n\n    if (domainParts.length == 0) {\n      // The address does not have a top-level domain\n      return false;\n    } else if (domainParts.length == 1) {\n      // The address has only a top-level domain (valid under RFC)\n      tld = domainParts[0];\n    } else {\n      // The address has a domain and a top-level domain\n      sld = domainParts[0];\n\n      for (var i = 1; i < domainParts.length; i++) {\n        tld += domainParts[i] + '.';\n      }\n\n      tld = tld.substring(0, tld.length - 1);\n    }\n\n    return {\n      topLevelDomain: tld,\n      secondLevelDomain: sld,\n      domain: domain,\n      address: parts.join('@')\n    };\n  },\n  // Encode the email address to prevent XSS but leave in valid\n  // characters, following this official spec:\n  // http://en.wikipedia.org/wiki/Email_address#Syntax\n  encodeEmail: function (email) {\n    var result = encodeURI(email);\n    result = result.replace('%20', ' ').replace('%25', '%').replace('%5E', '^').replace('%60', '`').replace('%7B', '{').replace('%7C', '|').replace('%7D', '}');\n    return result;\n  }\n}; // Export the mailcheck object if we're in a CommonJS env (e.g. Node).\n// Modeled off of Underscore.js.\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Mailcheck;\n} // Support AMD style definitions\n// Based on jQuery (see http://stackoverflow.com/a/17954882/1322410)\n\n\nif (typeof define === \"function\" && define.amd) {\n  define(\"mailcheck\", [], function () {\n    return Mailcheck;\n  });\n}\n\nif (typeof window !== 'undefined' && window.jQuery) {\n  (function ($) {\n    $.fn.mailcheck = function (opts) {\n      var self = this;\n\n      if (opts.suggested) {\n        var oldSuggested = opts.suggested;\n\n        opts.suggested = function (result) {\n          oldSuggested(self, result);\n        };\n      }\n\n      if (opts.empty) {\n        var oldEmpty = opts.empty;\n\n        opts.empty = function () {\n          oldEmpty.call(null, self);\n        };\n      }\n\n      opts.email = this.val();\n      Mailcheck.run(opts);\n    };\n  })(jQuery);\n}","map":{"version":3,"sources":["C:/Users/michael.james/Desktop/EmailValidation/email-validation/node_modules/mailcheck/src/mailcheck.js"],"names":["Mailcheck","domainThreshold","secondLevelThreshold","topLevelThreshold","defaultDomains","defaultSecondLevelDomains","defaultTopLevelDomains","run","opts","domains","secondLevelDomains","topLevelDomains","distanceFunction","sift3Distance","defaultCallback","result","suggestedCallback","suggested","emptyCallback","empty","suggest","encodeEmail","email","toLowerCase","emailParts","splitEmail","indexOf","secondLevelDomain","topLevelDomain","closestDomain","findClosestDomain","domain","address","full","closestSecondLevelDomain","closestTopLevelDomain","rtrn","replace","threshold","dist","minDist","i","length","s1","s2","c","offset1","offset2","lcs","maxOffset","charAt","parts","trim","split","pop","domainParts","sld","tld","substring","join","encodeURI","module","exports","define","amd","window","jQuery","$","fn","mailcheck","self","oldSuggested","oldEmpty","call","val"],"mappings":"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","sourcesContent":["/*\n * Mailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.1\n */\n\nvar Mailcheck = {\n  domainThreshold: 2,\n  secondLevelThreshold: 2,\n  topLevelThreshold: 2,\n\n  defaultDomains: ['msn.com', 'bellsouth.net',\n    'telus.net', 'comcast.net', 'optusnet.com.au',\n    'earthlink.net', 'qq.com', 'sky.com', 'icloud.com',\n    'mac.com', 'sympatico.ca', 'googlemail.com',\n    'att.net', 'xtra.co.nz', 'web.de',\n    'cox.net', 'gmail.com', 'ymail.com',\n    'aim.com', 'rogers.com', 'verizon.net',\n    'rocketmail.com', 'google.com', 'optonline.net',\n    'sbcglobal.net', 'aol.com', 'me.com', 'btinternet.com',\n    'charter.net', 'shaw.ca'],\n\n  defaultSecondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n\n  defaultTopLevelDomains: [\"com\", \"com.au\", \"com.tw\", \"ca\", \"co.nz\", \"co.uk\", \"de\",\n    \"fr\", \"it\", \"ru\", \"net\", \"org\", \"edu\", \"gov\", \"jp\", \"nl\", \"kr\", \"se\", \"eu\",\n    \"ie\", \"co.il\", \"us\", \"at\", \"be\", \"dk\", \"hk\", \"es\", \"gr\", \"ch\", \"no\", \"cz\",\n    \"in\", \"net\", \"net.au\", \"info\", \"biz\", \"mil\", \"co.jp\", \"sg\", \"hu\"],\n\n  run: function(opts) {\n    opts.domains = opts.domains || Mailcheck.defaultDomains;\n    opts.secondLevelDomains = opts.secondLevelDomains || Mailcheck.defaultSecondLevelDomains;\n    opts.topLevelDomains = opts.topLevelDomains || Mailcheck.defaultTopLevelDomains;\n    opts.distanceFunction = opts.distanceFunction || Mailcheck.sift3Distance;\n\n    var defaultCallback = function(result){ return result };\n    var suggestedCallback = opts.suggested || defaultCallback;\n    var emptyCallback = opts.empty || defaultCallback;\n\n    var result = Mailcheck.suggest(Mailcheck.encodeEmail(opts.email), opts.domains, opts.secondLevelDomains, opts.topLevelDomains, opts.distanceFunction);\n\n    return result ? suggestedCallback(result) : emptyCallback()\n  },\n\n  suggest: function(email, domains, secondLevelDomains, topLevelDomains, distanceFunction) {\n    email = email.toLowerCase();\n\n    var emailParts = this.splitEmail(email);\n\n    if (secondLevelDomains && topLevelDomains) {\n        // If the email is a valid 2nd-level + top-level, do not suggest anything.\n        if (secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 && topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1) {\n            return false;\n        }\n    }\n\n    var closestDomain = this.findClosestDomain(emailParts.domain, domains, distanceFunction, this.domainThreshold);\n\n    if (closestDomain) {\n      if (closestDomain == emailParts.domain) {\n        // The email address exactly matches one of the supplied domains; do not return a suggestion.\n        return false;\n      } else {\n        // The email address closely matches one of the supplied domains; return a suggestion\n        return { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain };\n      }\n    }\n\n    // The email address does not closely match one of the supplied domains\n    var closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, secondLevelDomains, distanceFunction, this.secondLevelThreshold);\n    var closestTopLevelDomain    = this.findClosestDomain(emailParts.topLevelDomain, topLevelDomains, distanceFunction, this.topLevelThreshold);\n\n    if (emailParts.domain) {\n      var closestDomain = emailParts.domain;\n      var rtrn = false;\n\n      if(closestSecondLevelDomain && closestSecondLevelDomain != emailParts.secondLevelDomain) {\n        // The email address may have a mispelled second-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n        rtrn = true;\n      }\n\n      if(closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain) {\n        // The email address may have a mispelled top-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.topLevelDomain, closestTopLevelDomain);\n        rtrn = true;\n      }\n\n      if (rtrn == true) {\n        return { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain };\n      }\n    }\n\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n    return false;\n  },\n\n  findClosestDomain: function(domain, domains, distanceFunction, threshold) {\n    threshold = threshold || this.topLevelThreshold;\n    var dist;\n    var minDist = 99;\n    var closestDomain = null;\n\n    if (!domain || !domains) {\n      return false;\n    }\n    if(!distanceFunction) {\n      distanceFunction = this.sift3Distance;\n    }\n\n    for (var i = 0; i < domains.length; i++) {\n      if (domain === domains[i]) {\n        return domain;\n      }\n      dist = distanceFunction(domain, domains[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestDomain = domains[i];\n      }\n    }\n\n    if (minDist <= threshold && closestDomain !== null) {\n      return closestDomain;\n    } else {\n      return false;\n    }\n  },\n\n  sift3Distance: function(s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n      if (s2 == null || s2.length === 0) {\n        return 0;\n      } else {\n        return s2.length;\n      }\n    }\n\n    if (s2 == null || s2.length === 0) {\n      return s1.length;\n    }\n\n    var c = 0;\n    var offset1 = 0;\n    var offset2 = 0;\n    var lcs = 0;\n    var maxOffset = 5;\n\n    while ((c + offset1 < s1.length) && (c + offset2 < s2.length)) {\n      if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n        lcs++;\n      } else {\n        offset1 = 0;\n        offset2 = 0;\n        for (var i = 0; i < maxOffset; i++) {\n          if ((c + i < s1.length) && (s1.charAt(c + i) == s2.charAt(c))) {\n            offset1 = i;\n            break;\n          }\n          if ((c + i < s2.length) && (s1.charAt(c) == s2.charAt(c + i))) {\n            offset2 = i;\n            break;\n          }\n        }\n      }\n      c++;\n    }\n    return (s1.length + s2.length) /2 - lcs;\n  },\n\n  splitEmail: function(email) {\n    var parts = email.trim().split('@');\n\n    if (parts.length < 2) {\n      return false;\n    }\n\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i] === '') {\n        return false;\n      }\n    }\n\n    var domain = parts.pop();\n    var domainParts = domain.split('.');\n    var sld = '';\n    var tld = '';\n\n    if (domainParts.length == 0) {\n      // The address does not have a top-level domain\n      return false;\n    } else if (domainParts.length == 1) {\n      // The address has only a top-level domain (valid under RFC)\n      tld = domainParts[0];\n    } else {\n      // The address has a domain and a top-level domain\n      sld = domainParts[0];\n      for (var i = 1; i < domainParts.length; i++) {\n        tld += domainParts[i] + '.';\n      }\n      tld = tld.substring(0, tld.length - 1);\n    }\n\n    return {\n      topLevelDomain: tld,\n      secondLevelDomain: sld,\n      domain: domain,\n      address: parts.join('@')\n    }\n  },\n\n  // Encode the email address to prevent XSS but leave in valid\n  // characters, following this official spec:\n  // http://en.wikipedia.org/wiki/Email_address#Syntax\n  encodeEmail: function(email) {\n    var result = encodeURI(email);\n    result = result.replace('%20', ' ').replace('%25', '%').replace('%5E', '^')\n                   .replace('%60', '`').replace('%7B', '{').replace('%7C', '|')\n                   .replace('%7D', '}');\n    return result;\n  }\n};\n\n// Export the mailcheck object if we're in a CommonJS env (e.g. Node).\n// Modeled off of Underscore.js.\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = Mailcheck;\n}\n\n// Support AMD style definitions\n// Based on jQuery (see http://stackoverflow.com/a/17954882/1322410)\nif (typeof define === \"function\" && define.amd) {\n  define(\"mailcheck\", [], function() {\n    return Mailcheck;\n  });\n}\n\nif (typeof window !== 'undefined' && window.jQuery) {\n  (function($){\n    $.fn.mailcheck = function(opts) {\n      var self = this;\n      if (opts.suggested) {\n        var oldSuggested = opts.suggested;\n        opts.suggested = function(result) {\n          oldSuggested(self, result);\n        };\n      }\n\n      if (opts.empty) {\n        var oldEmpty = opts.empty;\n        opts.empty = function() {\n          oldEmpty.call(null, self);\n        };\n      }\n\n      opts.email = this.val();\n      Mailcheck.run(opts);\n    }\n  })(jQuery);\n}\n"]},"metadata":{},"sourceType":"script"}